name: Build ARM Ubuntu RootFS

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  lxc-build:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: write
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install host dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            debootstrap lxc jq p7zip-full zstd curl wget ca-certificates \
            tar xz-utils gnupg dnsmasq-base uidmap

      - name: Run LXC build script
        run: |
          chmod +x build_ubuntu.sh
          sudo ./build_ubuntu.sh

      - name: Set Release Tag and Name
        id: set_tag_name
        run: |
          current_time=$(date +"%y.%U.%H.%M")
          echo "TAG_NAME=release-${current_time}" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release ${current_time}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: true

      - name: Upload rootfs artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob

          # Remove the templated suffix from upload_url if present (e.g., {?name,label})
          upload_url="${UPLOAD_URL%%\{*}"
          echo "Resolved upload_url: ${upload_url}"

          # Prefer uploading all 7z split parts if present
          parts=( *.7z.* )
          if (( ${#parts[@]} == 0 )); then
            echo "No 7z split parts found to upload (expected '*.7z.*')." >&2
            ls -al
            exit 1
          fi

          echo "Found ${#parts[@]} split 7z parts: ${parts[*]}"
          for f in "${parts[@]}"; do
            echo "Uploading: $f"
            curl -sS -X POST \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$f" \
              "${upload_url}?name=$(basename "$f")"
          done
          echo "All 7z parts uploaded."
          exit 1